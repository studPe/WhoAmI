buildscript {
    repositories {
    	mavenCentral()
	    maven { setUrl("https://maven.vaadin.com/vaadin-prereleases") }
			maven { setUrl("https://repo.spring.io/milestone") }
		}
}
plugins {
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
	id 'com.vaadin'
	id "org.sonarqube" version "4.4.1.3373"
	id 'jacoco'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
	mavenCentral()
	maven { setUrl("https://maven.vaadin.com/vaadin-prereleases") }
	maven { setUrl("https://repo.spring.io/milestone") }
	maven { setUrl("https://maven.vaadin.com/vaadin-addons") }
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

dependencies {
	implementation('com.vaadin:vaadin-spring-boot-starter')
	implementation('org.json:json:20210307')
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

dependencyManagement {
	imports {
		mavenBom "com.vaadin:vaadin-bom:$vaadinVersion"
	}
}
test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacoco {
	toolVersion = "0.8.7"
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
	reports {
		xml.required = true
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}

sonar {
	properties {
    property "sonar.projectKey", "studPe_WhoAmI"
    property "sonar.organization", "studpe"
    property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.qualitygate.wait", true
		property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
	}
}
